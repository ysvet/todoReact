import React, {Component} from 'react';

import AppHeader from '../app-header';
import SearchPanel from '../search-panel';
import TodoList from '../todo-list';
import ItemStatusFilter from '../item-status-filter';
import ItemAddForm from '../item-add-form';

import './app.css';

export default class App extends Component {
  maxId = 100; //for id-s generation (used in add item). In real life id's will generated by server, so all id's used in this are for working demonstration purposes

  state = {
     todoData: [
      {label: 'Drink coffe', important: false, id: 1},
      {label: 'Make Awesome App', important: true, id: 2},
      {label: 'Have a lunch', important: false, id: 3}
    ]
  };
   deleteItem = (id) => {
     this.setState(({ todoData }) => {
        const idx = todoData.findIndex((el) => el.id === id);

///getting new array without changing the old one (!!WE DO NOT WANT TO CHANGE STATE)
        const newArray = [...todoData.slice(0, idx),
                          ...todoData.slice(idx +1)
         ];


        return {
            todoData: newArray
        };

     });
   };

   addItem = (text) => {
     //we have to generate Id:
     const newItem ={
       label: text,
       importnat: false,
       id: this.maxId++ //we can change maxId because it's not in STATE
      };
      /// and add element in array -  getting new array without changing the old one (!!WE DO NOT WANT TO CHANGE STATE, so NO .push):
      this.setState(({todoData}) => {
        const newArr = [
          ...todoData,
          newItem
        ];
        return{
          todoData: newArr
        };
      });
   };

render () {
  return (
    <div className="todo-app">
      <AppHeader toDo={1} done={3} />
      <div className="top-panel d-flex">
        <SearchPanel />
        <ItemStatusFilter />
      </div>

      <TodoList todos={this.state.todoData}
       onDeleted ={this.deleteItem} />

       <ItemAddForm onItemAdded = {this.addItem} />
    </div>
  );
 }
};
